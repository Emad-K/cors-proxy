services:
  cors-proxy:
    build: .
    container_name: cors-proxy
    ports:
      - "${PORT:-8080}:8080"
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - PORT=8080
      - REDIS_URL=redis://redis:6379
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX}
      - CACHE_DURATION=${CACHE_DURATION}
      - TIMEOUT=${TIMEOUT}
      - USER_AGENT=${USER_AGENT}
    logging:
      driver: "json-file"
      options:
        mode: "non-blocking"
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--timeout=5", "--spider", "http://127.0.0.1:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    depends_on:
      redis:
        condition: service_healthy
  redis:
    image: redis:8-alpine
    container_name: redis
    expose:
      - "6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
